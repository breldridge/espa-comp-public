# Setup for the ESPA-Comp version of WEASLE# This will load data into the correct folders (requires access to# the WEASLE Teams folder right now - can eventually migrate data# to a more publicly available location).# Will also run load_gen_info.py which sets up a few required# files for the generator and demand bidsimport osimport shutilimport subprocessimport glob# Locate WEASLE directorytry:    weasle_dir =os.environ['WEASLE_DIR']except KeyError:    print("\nNo environmental variable found for 'WEASLE-DIR'.")    print("You must have a local copy of the WEASLE Teams folder to finish setup.")    weasle_input = input("If WEASLE is available, enter the path here:")    if os.path.isdir(weasle_input):        weasle_dir = weasle_input    else:        print(f"{weasle_input} is not a valid path. Exiting...")        exit(0)# Copy forecast files:weasle_system = 'market_clearing/system_data'parquet_list = [f for f in glob.glob(os.path.join(weasle_dir,"Forecast Data", "Forecasts",                                                  "*.parquet"))]print("Copying parquet files (forecasts). (This will take a minute)")for parquet in parquet_list:    print(f"Working on file {parquet}", end='\x1b[1K\r')    shutil.copy(parquet,weasle_system)# Copy raw data for updating forecastsweasle_forecast = 'forecasting'sub_dirs = ['BPA', 'CAISO', 'EIA', 'Demand']# Make sure necessary sub-directories have been createdfor sd in sub_dirs:    if not os.path.isdir(os.path.join(weasle_forecast,sd)):        os.makedirs(os.path.join(weasle_forecast,sd))bpa_files = ['WindGenTotalLoadYTD_2020.xls']print("Copying raw forecast and actual data.")for file in bpa_files:    shutil.copy(os.path.join(weasle_dir,"Forecast Data", "BPA", file),                os.path.join(weasle_forecast, "BPA"))caiso_files = ['ProductionAndCurtailmentsData_2020.xlsx']for file in caiso_files:    shutil.copy(os.path.join(weasle_dir,"Forecast Data", "CAISO", file),                os.path.join(weasle_forecast, "CAISO"))eia_files = ['actual_solar.csv', 'actual_wind.csv']for file in eia_files:    shutil.copy(os.path.join(weasle_dir,"Forecast Data", "EIA930", file),                os.path.join(weasle_forecast, "EIA"))demand_files = ['New_Load_1hr.csv', 'New_Load_5min.csv']for file in demand_files:    shutil.copy(os.path.join(weasle_dir,"Forecast Data", "Demand", file),                os.path.join(weasle_forecast, "Demand"))# Copy WECC network information fileswecc_filenames = ["Transmission.xlsx", "Generators.xlsx", "Generic_MinUpDn_Info.csv",                  "Generic_RampUpDn_Info.csv", "Generic_StartupCost_Info.csv",                  "Hydro_2030_8760.xlsx", "Load_2030_8760.csv"]wecc_dir = "Work Products/WECC_DATA/WECC"generic_dir = "Thermal_general"print("Copying WECC system information.")for file in wecc_filenames:    if 'Generic' in file:        shutil.copy(os.path.join(weasle_dir,wecc_dir,generic_dir,file), weasle_system)    else:        shutil.copy(os.path.join(weasle_dir,wecc_dir,file), weasle_system)# Now run load_gen_info.py to create the resource_info.xlsx file and scale_factors.json fileprint("Running load_gen_info.py")try:    gen_info = subprocess.run(['python','load_gen_info.py'], capture_output=True,                              text=True, check=True)except subprocess.CalledProcessError as e:    print("Call to load_gen_info.py failed. Error message:")    print(e.output)    print(e.stderr)    exit(0)print("\nSetup successfully completed!")print("You may now run scheduler.py (see the README for detailed instructions).\n")